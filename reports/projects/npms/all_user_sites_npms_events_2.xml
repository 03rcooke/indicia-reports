<?xml version="1.0" encoding="UTF-8"?>

<report title="All User Sites NPMS Events" description="A list of events which can optionally be limited to a single user's events.">
  <query website_filter_field="lw.website_id">
    SELECT #columns#
    FROM person_attribute_values pav
      LEFT JOIN locations l on l.id = pav.int_value AND l.deleted = false
      LEFT JOIN people p on p.id = pav.person_id AND p.deleted=false
      LEFT JOIN locations_websites lw ON lw.location_id=l.id AND lw.deleted=false
      LEFT JOIN location_attribute_values lavHistoric on lavHistoric.location_id=l.id AND lavHistoric.location_attribute_id=#historic_attr_id# AND lavHistoric.deleted=false
      LEFT JOIN users u ON u.person_id=p.id
      JOIN users_websites uw ON u.id = uw.user_id AND uw.site_role_id IS NOT NULL
      LEFT JOIN users_websites accesscheck on accesscheck.website_id=uw.website_id
        AND accesscheck.user_id=#auth_user_id# AND accesscheck.site_role_id&lt;3
      #joins#
    WHERE 1=1
      #filters#
      AND pav.deleted=false
      AND pav.person_attribute_id=#user_event_attr_id#
      AND (lavHistoric.id IS NULL OR lavHistoric.int_value = 0)
      AND #website_filter#        
   </query>
  <order_bys>
    <order_by>pav.id DESC</order_by>
  </order_bys>
  <params>
    <param name='user_event_attr_id' display='Id of the person attribute that holds user events' description='' datatype='integer'/>
    <param name="location_id" display="Location Id" description="A location id used if we only want to return results for a single location." datatype="integer" default='' emptyvalue=''>
      <where>l.id=#location_id#</where>
    </param>
    <param name="location_type_ids" display="Location Type Ids" description="Comma separated list of location type ids we want to return results for." datatype="text" default='' emptyvalue=''>
      <where>l.location_type_id in (#location_type_ids#)</where>
    </param>
    --Note am using the name the_user_id as just using user_id seems to pickup the current user's id automatically which isn't what we want at all
    <param name="the_user_id" display="User Id" description="A user id used if we only want to return results for a single user." datatype="integer" default='' emptyvalue=''>
      <where>u.id=#the_user_id#</where>
    </param>
    <param name='historic_attr_id' display='Historic Attribute Id' description='Attribute Id that holds whether an event is historic.' datatype='integer'/>
    <param name="auth_user_id" datatype="integer" default="-1" />
  </params>
  <columns>
    <column name="id" sql="pav.id" unique="true" in_count="integer" type="hidden" visible="false"/>
    <column name="location_name" display="Event" sql="l.name" datatype="text" />
    <column name="location_id" display="Location Id" sql="l.id" datatype="integer" visible="false"/>
    --note: Do not rename this as user_id as there appears to be automatic code associated with the website filter that looks for that name
    <column name="pav_user_id" display="User Id" sql="u.id" datatype="integer" visible="false"/>
    <column name="person_name" display="User's Name" sql="p.first_name || ' ' || p.surname" datatype="text"/>
    --Default to invisible as this field was added later and don't want to affect old reports
    <column name="person_email" display="User's Email" sql="CASE WHEN accesscheck.id IS NULL THEN NULL ELSE p.email_address END" visible="false" datatype="text"/>
  </columns>
</report>