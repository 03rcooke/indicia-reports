<report
    title="Get plots for square id"
    description="Get a list of plots associated with a given square ID. Uses special logic rules to remove plots from the list 
        if surveys 1 and 2 has already been completed for the year for the survey level (this must only happen in add mode though)."
>
  <query website_filter_field="lw.website_id">
    SELECT #columns#
    FROM locations plot
      LEFT JOIN locations_websites lw on lw.location_id=plot.id AND lw.deleted=false
      LEFT JOIN termlists_terms ttPlotType on ttPlotType.id = plot.location_type_id
      LEFT JOIN terms termPlotType on termPlotType.id = ttPlotType.term_id
      LEFT JOIN location_attribute_values lav on lav.location_attribute_id=#plot_number_attr_id# AND lav.location_id=plot.id
      LEFT JOIN person_attribute_values pav on pav.int_value=plot.parent_id AND pav.person_attribute_id=#user_square_attr_id# AND pav.deleted=false
    WHERE (plot.parent_id = #square_id#)
    AND #website_filter# AND plot.deleted=false
    AND plot.id NOT IN (
      SELECT plot.id
        FROM users u
        JOIN person_attribute_values pav
          ON pav.person_id = u.person_id
          AND pav.person_attribute_id = #user_square_attr_id#
          AND pav.updated_by_id &lt;&gt; u.id
          AND pav.deleted = false
        JOIN locations plot
          ON plot.parent_id=pav.int_value
          AND plot.deleted=false
        JOIN cache_samples_functional csf
          ON csf.location_id = plot.id
          AND (csf.id != #current_sample_id# OR csf.id = '0')
          AND csf.survey_id = #survey_id#
        WHERE u.id=#current_user_id# 
        AND (trim('#year_start_date#') = '' OR '#year_start_date#'='Click here' OR csf.date_end &gt;= CAST(COALESCE('#year_start_date#','1500-01-01') as date))
        AND (trim('#year_start_date#')  = '' OR '#year_start_date#'='Click here' OR csf.date_start &lt;= (CAST(COALESCE('#year_start_date#','1500-01-01') as date)) + interval '1 year') 
        AND u.deleted=false
        GROUP BY plot.id
        HAVING COUNT(plot.id) > 1
    )
    GROUP BY plot.id,lav.text_value,termplottype.term
    HAVING (plot.created_by_id=#current_user_id# OR count(pav.id) &lt; 2)
  </query>
  <order_bys>
    <order_by>plot.id</order_by>
  </order_bys>
  <params>
    <param name="plot_number_attr_id" display="Id of the plot number attribute" datatype="integer" default="0"/>
    <param name="current_user_id" display="Id of the currently logged in user" datatype="integer"/>
    <param name="square_id" display="Square id to get plots for" datatype="integer" emptyvalue="0"/>
    <param name="user_square_attr_id" display="Allocated Squares Attr ID" datatype="integer"/>
    <param name='year_start_date' description='Year start date to limit results to' datatype='date'/>
    <param name='current_sample_id' description='' datatype='integer' emptyvalue='0' default='0'/>
    <param name='survey_id' description='' datatype='integer' emptyvalue='0' default='0'/>
  </params>
  <columns>
    <column name='id' display='Plot ID' sql="plot.id" datatype='integer' visible="false" in_count="true"/>
    <column name='name' display='Plot Name' sql="
      case 
        when lav.text_value IS null
      then
        'Plot at ' || plot.centroid_sref || ' ('||  termPlotType.term || ') '
      else 
        'Plot ' || lav.text_value || ' at ' || plot.centroid_sref || ' ('||  termPlotType.term || ') '
      end
    " datatype='text'/>
  </columns>
</report>